

# 🚧 Troubleshooting Guide for Pushing Google Colab Projects to GitHub

> **Project:** `text_image_generator.ipynb`  
> **GitHub Repo:** [text_image_using_diffusers](https://github.com/Happymana3/text_image_using_diffusers)

---

## 🛠️ Tools Used

- Google Colab
- Git & GitHub
- Python (`nbformat` for metadata cleaning)
- LazyPredict (for baseline ML classification)

---

## ⚠️ Common Issues & Solutions

### 🔐 1. GitHub Authentication Error
**❌ Error:**
```
fatal: could not read Username for 'https://github.com': No such device or address
```

**✅ Solution:**
Use a `.netrc` file to securely store your GitHub token:

```python
import os

with open('/root/.netrc', 'w') as f:
    f.write("machine github.com\n")
    f.write("login YOUR_GITHUB_USERNAME\n")
    f.write("password YOUR_GITHUB_PAT\n")

os.chmod('/root/.netrc', 0o600)
```

---

### 🚫 2. Push Blocked Due to Secret Detection
**❌ Error:**
```
remote: error: GH013: Repository rule violations...
Push cannot contain secrets
```

**✅ Solution:**
- Remove GitHub tokens from code cells.
- Clean metadata before committing.
- Recommit after removal.

---

### 🧹 3. Invalid Notebook Metadata
**❌ Error:**
```
Invalid Notebook: the 'state' key is missing from 'metadata.widgets'
```

**✅ Solution:**
Clean metadata using:

```python
import nbformat

notebook_path = "/content/text_image_generator.ipynb"

with open(notebook_path, 'r', encoding='utf-8') as f:
    nb = nbformat.read(f, as_version=4)

if 'widgets' in nb['metadata']:
    del nb['metadata']['widgets']

with open(notebook_path, 'w', encoding='utf-8') as f:
    nbformat.write(nb, f)
```

---

### 🔀 4. Merge Conflicts & Diverged Histories
**❌ Error:**
```
fatal: refusing to merge unrelated histories
fatal: failed to push (non-fast-forward)
```

**✅ Solution:**

```bash
git pull origin main --allow-unrelated-histories
# Resolve any conflicts manually
git add your_file.ipynb
git commit -m "Resolved conflict"
git push origin main
```

---

### ❗ 5. LazyClassifier Freezing or Crashing

**❌ Problem:**
- Long execution time or session crash while running `LazyClassifier`.
- Issue especially common on large datasets in Colab's free environment.

**✅ Troubleshooting Steps:**

1. **Reduce Dataset Size:**
   ```python
   df_sample = df.sample(n=200, random_state=42)  # or even smaller
   ```

2. **Set `n_jobs=1`:**
   ```python
   clf = LazyClassifier(verbose=0, ignore_warnings=True, custom_metric=None, n_jobs=1)
   ```

3. **Avoid `train_test_split` with large test sizes:**
   ```python
   from sklearn.model_selection import train_test_split
   X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
   ```

4. **Use a Runtime with More Resources:**
   - Switch to **Colab Pro** or **use GPU/TPU** (though not always needed for LazyPredict).

5. **Filter Models (Advanced):**
   - LazyPredict allows custom model filtering if you want to limit the number of estimators.

---

### 🔄 6. Git Not Initialized or Not Synced
**❌ Error:**
```
fatal: not a git repository
```

**✅ Solution:**
```bash
git init
git remote add origin https://github.com/YOUR_USERNAME/YOUR_REPO.git
git checkout -b main
```

Set identity if prompted:
```bash
git config user.name "Your Name"
git config user.email "you@example.com"
```

---

## 📌 Final Git Workflow Summary

```bash
# 1. Initialize and connect repo
git init
git remote add origin <your_repo_url>
git checkout -b main

# 2. Set user identity
git config user.name "Your Name"
git config user.email "you@example.com"

# 3. Stage and commit
git add .
git commit -m "Initial commit"

# 4. Push to GitHub
git push --set-upstream origin main
```

---

## 📝 Pro Tips

- ✅ **Clean metadata** before final commits
- 🚫 **Do NOT expose** GitHub tokens in notebooks
- 💾 **Download a fresh `.ipynb`** before pushing
- 📁 Use `.gitignore` for large/unnecessary files
- 🧼 Always clear outputs and checkpoint files

---

